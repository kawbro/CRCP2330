class OwnGame
{
	field PC pc; //PC for the game
	field Bullet pew; // Bullet for PC fire
	field int move; //checks if PC is going left (1) or right (2)
	field int pcX, pcY;
	//field boolean shot; //Checks if PC is firing

	/**Constructs a new OwnGame*/
	constructor OwnGame new()
	{
		let pc = PC.new(246, 235, 20);
		let pew = Bullet.new(246, 235, 5);
		let move = 0;
		return this;
	}

	/*Disposes of the game*/
	method void dispose()
	{
		do pc.dispose();
		do Memory.deAlloc(this);
		return;
	}

	method void movePC()
	{
		if(move = 1)
		{
			do pc.moveLeft();
		}

		if(move = 2)
		{
			do pc.moveRight();
		}

		if(move = 3)
		{
			//do pc.fireReg();
			do pew.fire();
		}

		do Sys.wait(5); //to stop pc from zipping to edge of screen
		return;
	}

	method void run()
	{
		var char key; //Key pressed
		var boolean exit;
		let exit = false;

		while(~exit)
		{
			//waits for key to be pressed
			while(key = 0)
			{
				let key = Keyboard.keyPressed();
				do movePC();
			}

			if(key = 130) //Left arrow key
			{
				let move = 1;
			}
			if(key = 132) //Right arrow key
			{
				let move = 2;
			}

			if(key = 131) //Up arrow key
			{
				let move = 3;
				let pcX = pc.getX();
				do pew.setX(pcX);
				let pcY = pc.getY();
				do pew.setY(pcY);
			}

			//waits for key to be released
			while(~(key = 0))
			{
				let key = Keyboard.keyPressed();
				do movePC();
			}
		}
		return;
	}
}